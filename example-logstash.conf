input {
	# This input is where filebeat sends data 
	beats {
		port => 5555 
	}

	# This input is here for testing and to pass ELB health checks
	http {
		port => 9090
	}

	# This input is for graphite metrics 
	graphite {
		port =>  5556
		type => graphite
	}
} 

filter {

	if [type] == "log" {

		# TODO We have provided a starting point for the logstash configuration based off logs coming from filebeat
		# but you will likely need to make further customizations to this for your particular type of logs
		
		# Filebeat does not handle JSON, therefore we need to extract fields from message to root of the 
		# log optionaly we could specify the target field
		json {
			source => "message"
		}
	 
		# We're just removing a few fields that filebeat adds by default but don't want going to ES
		mutate {
			remove_field => [
				"count", "fields", "input_type",
				"offset", "host", "tags",
				"@version", "beat", "source"
			]
		}
			
		if [component] == "candlestack" {
			
			# We don't want the message for candlestack logs going to ES
			mutate {
				remove_field => ["message"]
			}
			
		} else {
			
			# We don't want the type for other logs going to ES
			mutate {
				remove_field => ["type"]
			}
			
			# Here we ensure that every field is an string, objects are serialized into YAML format
			ruby {
				code => "
					event.to_hash.each do |k,v|
						if ! ['@timestamp','@version' ].include?(k)
							event[k] = v.to_yaml.gsub(/^---\s+/,'').strip!
						end
					end
				"
			}
			
		}
		
	} else if [type] == "graphite" {
		
		# We need to extract the relevants pieces of data from the graphite log
		grok {
			match => [ "message", "%{DATA:metric_name} %{NUMBER:metric_value:float} %{POSINT:timestamp}" ]
		}
		
		# Remove all the other fields we do not care for
		prune {
			interpolate => true
			whitelist_names => ["type","metric_name","metric_value","timestamp"]
		}

	}
}

output{

	# This output is for troubleshooting, simply uncomment and comment the other outputs
	#file { 
	#	path => "/var/tmp/logstash-debug.log"
	#	codec => rubydebug 
	#}

	if [component] in ["$TODO_COMPONENTS"] {

		#If component is for a normal service send the log to AWS elastic search on index application-*
		amazon_es {
			hosts => ["$TODO_ELASTICSEARCH_ENDPOINT"]
			region => "$TODO_AWS_REGION"
			index => "application-%{+YYYY.MM.dd}"
		}

	} else if [component] == "candlestack" {

		#If component is for a the Candlestack service send the log to AWS elastic search on index candlestack-*
		amazon_es {
			hosts => ["$TODO_ELASTICSEARCH_ENDPOINT"]
			region => "$TODO_AWS_REGION"
			index => "candlestack-%{+YYYY.MM.dd}"
		}

	} else if [type] == 'graphite' {

		#If type is graphite send metrics to AWS elastic search on index graphite-*
		amazon_es {
			hosts => ["$TODO_ELASTICSEARCH_ENDPOINT"]
			region => "$TODO_AWS_REGION"
			index => "graphite-%{+YYYY.MM.dd}"
		}

	}

}
